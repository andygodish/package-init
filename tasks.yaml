includes: []

variables:
  - name: REGISTRY
    description: "Remote OCI registry for Zarf init package"
    default: "ghcr.io/zarf-dev/packages"
  - name: PACKAGE_NAME
    default: "init"
  - name: PACKAGE_VERSION
    description: "Version of the Zarf Init package"
    default: "v0.64.0"
  - name: ARCHITECTURE
    description: "System architecture (amd64 or arm64)"
    default: ""
  - name: CONFIG_FILE
    description: "Path to the zarf config file"
    default: "zarf-config.toml"

tasks:
  - name: pull
    description: "Pull Zarf init package from OCI registry"
    actions:
      - description: "Pull Zarf init package from OCI registry"
        cmd: |
          echo "Pulling Zarf init package ${PACKAGE_NAME}:${PACKAGE_VERSION} from ${REGISTRY}"
          
          ARCH_FLAG=""
          if [ -n "${ARCHITECTURE}" ]; then
            ARCH_FLAG="-a ${ARCHITECTURE}"
            echo "Using specified architecture: ${ARCHITECTURE}"
          else
            echo "Using auto-detected architecture"
          fi
          
          uds zarf package pull ${ARCH_FLAG} oci://${REGISTRY}/${PACKAGE_NAME}:${PACKAGE_VERSION}
        env:
          - ZARF_LOG_LEVEL=info

  - name: deploy
    description: "Deploy Zarf Init package"
    actions:
      - description: "Deploy Zarf Inint with defined zarf-config.toml"
        cmd: |
          ZARF_CONFIG="$CONFIG_FILE" uds zarf package deploy zarf-init-*-${PACKAGE_VERSION}.tar.zst \
            --confirm

  - name: clean
    description: "Remove local Zarf package files"
    actions:
      - description: "Clean up local Zarf package files"
        cmd: |
          echo "Cleaning up local UDS Zarf package files"
          rm -f zarf-init*.tar.zst
          echo "Package files removed"

